install.packages("Rcmdr")
install.packages("rattle")
install.packages("Deducer")
install.packages("anomalize")
install.packages("datamaps")
protein_dist <- dist(protein_no_country, method = 'euclidian')
fviz_dist(protein_dist)
install.packages("factoextra")
fviz_dist(protein_dist)
install.packages("broom")
library(broom)
tidy(k_means_protein)
k_means_protein$centers
usa <- USArrests
skim(usa)
p
library(patchwork)
library(tidyverse) # обработка данных, графики...
library(skimr)# описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(cluster) # кластерный анализ
library(factoextra) # визуализации kmeans, pca,
library(dendextend) # визуализация дендрограмм
library(corrplot) # визуализация корреляций
library(broom) # метла превращает результаты оценивания моделей в таблички
library(naniar) # визуализация пропущенных значений
library(visdat) # визуализация пропущенных значений
library(patchwork) # удобное расположение графиков рядом
mx <- tibble(ID = c('A', 'B', 'C', 'D', 'E'),
x = c(1, 2, 4, 1, 8))
mx
my <- tibble(ID = c('A', 'C', 'D', 'F', 'E'),
y = c(5, 4, 6, 9, 3))
my
my_matrix <- matrix(c(1, 2, 3, 4, 5, 6), nrow = 2)
my_matrix
class(my_matrix)
my_tibble <- as_tibble(my_matrix)
skim(my_tibble)
my_list <- list(kreks = 'Привет!', peks = c(5, 6, NA), feks = diamonds)
my_list$kreks
my_list$peks
attributes(my_list)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse) # обработка данных, графики...
library(skimr)# описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(cluster) # кластерный анализ
library(factoextra) # визуализации kmeans, pca,
library(dendextend) # визуализация дендрограмм
library(corrplot) # визуализация корреляций
library(broom) # метла превращает результаты оценивания моделей в таблички
library(naniar) # визуализация пропущенных значений
library(visdat) # визуализация пропущенных значений
library(patchwork) # удобное расположение графиков рядом
protein <- import('Europenaprotein.csv')
setwd("D:/R/Seminar04/Seminar04")
protein <- import('Europenaprotein.csv')
setwd("D:/R/Seminar04/Seminar04/Data")
protein <- import('Europenaprotein.csv')
skim(protein)
protein_no_country <- protein %>%
mutate_if(is.numeric, ~ as.vector(scale(.))) %>%
column_to_rownames(var = 'Country')
k_means_protein <- kmeans(protein_no_country, centers = 3)
k_means_protein
k_means_protein$withinss
k_means_protein$betweenss
k_means_protein$totss
g1 <- fviz_nbclust(protein_no_country, kmeans, method = 'wss') +
labs(title = 'Зависимость WSS от числа кластеров',
subtitle = 'Метод: на глаз!', x = 'Число кластеров',
y = 'Внутригрупповая сумма квадратов расстояний')
g1
protein <- import('data/Europenaprotein.csv')
setwd("D:/R/Seminar04/Seminar04")
protein <- import('data/Europenaprotein.csv')
protein_no_country <- protein %>%
mutate_if(is.numeric, ~ as.vector(scale(.))) %>%
column_to_rownames(var = 'Country')
protein_no_country <- protein %>%
mutate_if(is.numeric, ~ as.vector(scale(.))) %>%
column_to_rownames(var = 'Country')
k_means_protein <- kmeans(protein_no_country, centers = 3)
k_means_protein
k_means_protein$withinss
k_means_protein$betweenss
k_means_protein$totss
set.seed(13)
k_means_protein <- kmeans(protein_no_country, centers = 3)
k_means_protein
g1 <- fviz_nbclust(protein_no_country, kmeans, method = 'wss') +
labs(title = 'Зависимость WSS от числа кластеров',
subtitle = 'Метод: на глаз!', x = 'Число кластеров',
y = 'Внутригрупповая сумма квадратов расстояний')
g2 <- fviz_nbclust(protein_no_country, kmeans, method = 'silhouette') +
labs(subtitle = 'Метод силуэтов',
title = 'Зависимость средней ширины силуэта от числа кластеров',
y = 'Средняя ширина силуэта по всем точкам',
x = 'Число кластеров')
g2
fviz_cluster(object = k_means_protein,
data = protein_no_country,
ellipse.type = 'convex')
```{r}
g2 <- fviz_nbclust(protein_no_country, kmeans, method = 'silhouette') +
labs(subtitle = 'Метод силуэтов',
title = 'Зависимость средней ширины силуэта от числа кластеров',
y = 'Средняя ширина силуэта по всем точкам',
x = 'Число кластеров')
g2
g3 <- fviz_nbclust(protein_no_country, kmeans, method = 'gap_stat') +
labs(subtitle = 'Gap statistic method')
g3
g2 <- fviz_nbclust(protein_no_country, kmeans, method = 'silhouette') +
labs(subtitle = 'Метод силуэтов',
title = 'Зависимость средней ширины силуэта от числа кластеров',
y = 'Средняя ширина силуэта по всем точкам',
x = 'Число кластеров')
g2
protein_dist <- dist(protein_no_country, method = 'euclidian')
fviz_dist(protein_dist)
protein_dist <- dist(protein_no_country, method = 'euclidian')
fviz_dist(protein_dist)
usa <- USArrests
usa_dist <- dist(usa, method = 'euclidian')
fviz_dist(usa_dist)
protein_hcl <- hcut(protein_no_country, k = 4,
hc_metric = 'euclidean', hc_method = 'ward.D2')
fviz_dend(protein_hcl,
cex = 0.5, # размер подписи
color_labels_by_k = TRUE) # цвет подписей по группам
protein_plus2 <- mutate(protein, cluster = protein_hcl$cluster)
glimpse(protein_plus2)
usa_hcl <- hcut(USArrests, k = 4)
fviz_dend(usa_hc1,
cex = 0.5, # размер подписи
color_labels_by_k = TRUE) # цвет подписей по группам
fviz_dend(usa_hcl,
cex = 0.5, # размер подписи
color_labels_by_k = TRUE) # цвет подписей по группам
protein_cor <- cor(protein_no_country)
corrplot(protein_cor, order = 'hclust', addrect = 3)
usa_cor <- cor(USArrests)
corrplot(usa_cor, order = 'hclust', addrect = 2, method = shade)
corrplot(usa_cor, order = 'hclust', addrect = 2, method = 'shade')
usa_plus2 <- mutate(USArrests, cluster = 4)
glimpse(usa_plus2)
usa_plus2 <- mutate(USArrests, cluster = 4)
glimpse(usa_plus2)
usa_plus2 <- mutate(USArrests, cluster = TRUE)
glimpse(usa_plus2)
usa_hcl
attributes(usa_hcl)
usa_hcl$cluster
usa_plus2 <- mutate(USArrests, cluster = usa_hcl$cluster)
glimpse(usa_plus2)
fviz_pca_ind(protein_pca, repel = TRUE)
protein_pca <- prcomp(protein_no_country)
protein_pca
attributes(protein_pca)
protein_pca$x[, 1]
protein_pca$sdev
protein_pca$rotation[, 1]
fviz_pca_ind(protein_pca, repel = TRUE)
usa_pca <- prcomp(usa, scale = TRUE)
usa_pca
fviz_pca_ind(usa_pca, repel = TRUE)
fviz_pca_biplot(protein_pca, repel = TRUE)
fviz_pca_biplot(usa, scale = TRUE)
fviz_pca_biplot(usa_pca, scale = TRUE)
fviz_eig(protein_pca)
fviz_eig(protein_pca, addlabels = TRUE)
fviz_contrib(protein_pca, choice = 'var', axes = 1)
fviz_contrib(protein_pca, choice = 'ind', axes = 3)
fviz_cluster(object = k_means_protein,
data = protein_no_country,
ellipse.type = 'convex')
